#ifndef __GRAPH__H__
#define __GRAPH__H__
// Definition of a struct representing a graph
typedef struct graph
{
    // Number of vertices in the graph
    int size;

    // Adjacency matrix representing connections between vertices
    int** matrix;

    // Transpose of the adjacency matrix for graph algorithms
    int** transpos_matrix;
} graph_t;

/**
 * @brief Создает граф на основе ввода пользователя.
 *
 * Эта функция предлагает пользователю ввести общее количество вершин и
 * пути между ними. Она выделяет память для матрицы смежности и
 * транспонированной матрицы графа.
 *
 * @param graph Указатель на структуру графа, которую необходимо создать.
 * @return Возвращает OK (0), если создание графа успешно, или код ошибки в противном случае.
 */
int create_graph(graph_t *graph);

/**
 * @brief Инициализирует структуру графа.
 *
 * Эта функция инициализирует заданную структуру графа, устанавливая ее матрицу,
 * транспонированную матрицу и размер в начальные значения.
 *
 * @param graph Указатель на структуру графа, которую необходимо инициализировать.
 */
void init_graph(graph_t *graph);

/**
 * @brief Освобождает выделенную память для структуры графа.
 *
 * Эта функция освобождает память, выделенную для матрицы смежности и
 * транспонированной матрицы графа. Она устанавливает указатели на матрицы в NULL.
 *
 * @param graph Указатель на структуру графа, которую необходимо освободить.
 */
void free_graph(graph_t *graph);

/**
 * @brief Выводит граф в формате DOT Graphviz и генерирует изображение.
 *
 * Эта функция создает файл DOT, представляющий граф, и использует Graphviz
 * для создания изображения в формате PNG. Сгенерированное изображение открывается с использованием
 * программы просмотра по умолчанию.
 *
 * @param graph Указатель на структуру графа, которую необходимо вывести.
 */
void print_graph(graph_t *graph);

/**
 * @brief Определяет, связан ли граф, начиная с заданной вершины.
 *
 * Эта функция выполняет поиск в глубину (DFS), начиная с указанной
 * вершины, чтобы определить, связан ли граф. Результат выводится в консоль.
 *
 * @param graph Указатель на структуру графа.
 * @param start_vertex Начальная вершина для DFS.
 * @return Возвращает 1, если граф связан, 0 в противном случае, или код ошибки.
 */
int is_connected(graph_t *graph, int start_vertex);

#endif //__GRAPH__H__
